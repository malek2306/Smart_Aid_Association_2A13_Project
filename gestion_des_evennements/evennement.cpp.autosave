#include "connection.h"
#include "QSqlDatabase"
#include "evennement.h"
#include<QtDebug>

QSqlQueryModel * evennement::afficher()
{
    QSqlQueryModel * model= new QSqlQueryModel();
         model->setQuery("SELECT * FROM EVENNEMENT");
         qDebug()<<"connection";
        // QString g=QString::number()
         model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
         model->setHeaderData(1, Qt::Horizontal, QObject::tr("libelle"));
         model->setHeaderData(2, Qt::Horizontal, QObject::tr("lieu"));
         model->setHeaderData(3, Qt::Horizontal, QObject::tr("type"));
         model->setHeaderData(6, Qt::Horizontal, QObject::tr("datee"));
    return model;
}


bool evennement::ajouter()
{
    QSqlQuery query;
    QString id_string=QString::number(id_event);

    query.prepare("INSERT INTO EVENNEMENT(id_event, libelle, lieu,type,datee) "
                  "VALUES (:id_event, :libelle, :lieu,:type,:datee)");
    query.bindValue(":id_event", id_string);
    query.bindValue(":libelle", libelle);
    query.bindValue(":lieu", lieu);
    query.bindValue(":type", type);
    query.bindValue(":datee", datee);
    return query.exec();
   // return test;

}

bool evennement::supprimer(int cin)
{
    QSqlQuery query;
    QString res=QString::number(cin);
    query.prepare("Delete from client where CIN=:cin");
    query.bindValue(":cin",res);
    return query.exec();
}
